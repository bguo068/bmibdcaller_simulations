// Adapted from SLIM 4.0.1 Section 17.2's recipe

function (NULL) set_default(string k, lifs v) {
	if(!exists(k)) defineConstant(k, v);
	catn(c("Parameter", k, v), sep='\t');
	return NULL;
}
initialize() {
	set_default("L", 60000000); // chromosome length in bp
	set_default("r", 1e-8);     // recombinantion rate
	set_default("gc", 0);     // recombinantion rate
	set_default("outid", 1);    // idx

	initializeTreeSeq();
	initializeMutationRate(0);                   // no mutation added, ancestry only simulation
	initializeMutationType("m1", 0.5, "f", 0.0); // neutral
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, L-1); // 60Mb
	if (gc == 0){
		initializeRecombinationRate(r);          
	}
	else{
		initializeRecombinationRate(r * 3);          // recombination rate (1e-8) + gene coversion rate (2e-8)
		initializeGeneConversion(0.6667, 300, 1.0);
	}
}
// demographic changes
1 early() {
	sim.addSubpop("p1", 3000);   // N = 3000 at 5000 generations ago (g = 1)
}
4701:4990 early () {             // N grow at 1.4% from 300 generations ago to 10 generations ago
	p1.setSubpopulationSize(asInteger(p1.individualCount * 1.014));
}
4991:5000 early () {             // N grow at 25% from 10 generations ago to 0 generations ago
	p1.setSubpopulationSize(asInteger(p1.individualCount * 1.25));
}
// logging
1:5000 late (){
	// output placeholder text to to make downstream script happy
	catn(c("DAF", 5000 - sim.cycle, 0.0), sep='\t'); 
	catn(c('True_Ne', 5000 - sim.cycle - 1, p1.individualCount), sep='\t');
}
// saving trees
5000 late() {
	sim.treeSeqOutput(paste("tmp_slim_out_single_pop_", outid, ".trees", sep=''));
}